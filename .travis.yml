# SLB
#
# Copyright Michael Park, 2017
# Copyright Agustin Berge, 2017
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

language: cpp
sudo: false

matrix:
  include:
    # gcc-4.8
    - env: VERSION=4.8 CXXFLAGS="-std=c++11"
      compiler: gcc
      os: linux
      addons: &gcc48
        apt:
          packages:
            - g++-4.8
          sources:
            - ubuntu-toolchain-r-test

    - env: VERSION=4.8 CXXFLAGS="-std=c++1y"
      compiler: gcc
      os: linux
      addons: *gcc48

    # gcc-4.9
    - env: VERSION=4.9 CXXFLAGS="-std=c++11"
      compiler: gcc
      os: linux
      addons: &gcc49
        apt:
          packages:
            - g++-4.9
          sources:
            - ubuntu-toolchain-r-test

    - env: VERSION=4.9 CXXFLAGS="-std=c++14"
      compiler: gcc
      os: linux
      addons: *gcc49

    # gcc-5
    - env: VERSION=5 CXXFLAGS="-std=c++11"
      compiler: gcc
      os: linux
      addons: &gcc5
        apt:
          packages:
            - g++-5
          sources:
            - ubuntu-toolchain-r-test

    - env: VERSION=5 CXXFLAGS="-std=c++14"
      compiler: gcc
      os: linux
      addons: *gcc5

    - env: VERSION=5 CXXFLAGS="-std=c++1z"
      compiler: gcc
      os: linux
      addons: *gcc5

    # gcc-6
    - env: VERSION=6 CXXFLAGS="-std=c++11"
      compiler: gcc
      os: linux
      addons: &gcc6
        apt:
          packages:
            - g++-6
          sources:
            - ubuntu-toolchain-r-test

    - env: VERSION=6 CXXFLAGS="-std=c++14"
      compiler: gcc
      os: linux
      addons: *gcc6

    - env: VERSION=6 CXXFLAGS="-std=c++1z"
      compiler: gcc
      os: linux
      addons: *gcc6

    # gcc-7
    - env: VERSION=7 CXXFLAGS="-std=c++11"
      compiler: gcc
      os: linux
      addons: &gcc7
        apt:
          packages:
            - g++-7
          sources:
            - ubuntu-toolchain-r-test

    - env: VERSION=7 CXXFLAGS="-std=c++14"
      compiler: gcc
      os: linux
      addons: *gcc7

    - env: VERSION=7 CXXFLAGS="-std=c++17"
      compiler: gcc
      os: linux
      addons: *gcc7

    # clang-3.7
    - env: VERSION=3.7 CXXFLAGS="-std=c++11"
      compiler: clang
      os: linux
      addons: &clang37
        apt:
          packages:
            - clang-3.7
            - libstdc++-5-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7

    - env: VERSION=3.7 CXXFLAGS="-std=c++14"
      compiler: clang
      os: linux
      addons: *clang37

    # clang-3.8
    - env: VERSION=3.8 CXXFLAGS="-std=c++11"
      compiler: clang
      os: linux
      addons: &clang38
        apt:
          packages:
            - clang-3.8
            - libstdc++-5-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8

    - env: VERSION=3.8 CXXFLAGS="-std=c++14"
      compiler: clang
      os: linux
      addons: *clang38

    # clang-3.9
    - env: VERSION=3.9 CXXFLAGS="-std=c++11"
      compiler: clang
      os: linux
      addons: &clang39
        apt:
          packages:
            - clang-3.9
            - libstdc++-6-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-3.9

    - env: VERSION=3.9 CXXFLAGS="-std=c++14"
      compiler: clang
      os: linux
      addons: *clang39

    - env: VERSION=3.9 CXXFLAGS="-std=c++1z"
      compiler: clang
      os: linux
      addons: *clang39

    # clang-4
    - env: VERSION=4.0 CXXFLAGS="-std=c++11"
      compiler: clang
      os: linux
      addons: &clang4
        apt:
          packages:
            - clang-4.0
            - libstdc++-6-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0

    - env: VERSION=4.0 CXXFLAGS="-std=c++14"
      compiler: clang
      os: linux
      addons: *clang4

    - env: VERSION=4.0 CXXFLAGS="-std=c++1z"
      compiler: clang
      os: linux
      addons: *clang4

    # clang-5
    - env: VERSION=5.0 CXXFLAGS="-std=c++11"
      compiler: clang
      os: linux
      addons: &clang5
        apt:
          packages:
            - clang-5.0
            - libstdc++-7-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0

    - env: VERSION=5.0 CXXFLAGS="-std=c++14"
      compiler: clang
      os: linux
      addons: *clang5

    - env: VERSION=5.0 CXXFLAGS="-std=c++17"
      compiler: clang
      os: linux
      addons: *clang5

    # Xcode 6.4
    - env: CXXFLAGS="-std=c++11"
      compiler: clang
      os: osx
      osx_image: xcode6.4
      addons: &xcode64

    - env: CXXFLAGS="-std=c++14"
      compiler: clang
      os: osx
      osx_image: xcode6.4
      addons: *xcode64

    # Xcode 7.3
    - env: CXXFLAGS="-std=c++11"
      compiler: clang
      os: osx
      osx_image: xcode7.3
      addons: &xcode73

    - env: CXXFLAGS="-std=c++14"
      compiler: clang
      os: osx
      osx_image: xcode7.3
      addons: *xcode73

    - env: CXXFLAGS="-std=c++1z"
      compiler: clang
      os: osx
      osx_image: xcode7.3
      addons: *xcode73

    # Xcode 8.3
    - env: CXXFLAGS="-std=c++11"
      compiler: clang
      os: osx
      osx_image: xcode8.3
      addons: &xcode83

    - env: CXXFLAGS="-std=c++14"
      compiler: clang
      os: osx
      osx_image: xcode8.3
      addons: *xcode83

    - env: CXXFLAGS="-std=c++1z"
      compiler: clang
      os: osx
      osx_image: xcode8.3
      addons: *xcode83

    # Xcode 9.1
    - env: CXXFLAGS="-std=c++11"
      compiler: clang
      os: osx
      osx_image: xcode9.1
      addons: &xcode91

    - env: CXXFLAGS="-std=c++14"
      compiler: clang
      os: osx
      osx_image: xcode9.1
      addons: *xcode91

    - env: CXXFLAGS="-std=c++1z"
      compiler: clang
      os: osx
      osx_image: xcode9.1
      addons: *xcode91

branches:
  only:
    - master

before_install:
  - |
    if [ -n "${VERSION}" ]; then
      export CC="${CC}-${VERSION}"
      export CXX="${CXX}-${VERSION}"
    fi
  - export CXXFLAGS="${CXXFLAGS} -Wall -Wextra -Werror -pedantic-errors"

install:
  - mkdir build-debug
  - cd build-debug
  - cmake -DCMAKE_BUILD_TYPE=Debug ..
  - cd ..

  - mkdir build-release
  - cd build-release
  - cmake -DCMAKE_BUILD_TYPE=Release ..
  - cd ..

script:
  - cd build-debug
  - cmake --build . -- -k
  - ctest --output-on-failure
  - cd ..

  - cd build-release
  - cmake --build . -- -k
  - ctest --output-on-failure
  - cd ..

notifications:
  email: false
